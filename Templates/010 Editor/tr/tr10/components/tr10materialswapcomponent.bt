#define TR_VERSION 10
#include "../../trcommon.bt"

typedef struct
{
} IHighlightableResource <optimize=false>;

typedef struct
{
    IHighlightableResource _Parent;
} IMaterial <optimize=false>;

typedef struct
{
    Ref originalMaterialRef;
    if (CanSeekTo(originalMaterialRef))
    {
        SeekToRef(originalMaterialRef);
        IMaterial originalMaterial;
        ReturnFromRef();
    }
    Ref overrideMaterialRef;
    if (CanSeekTo(overrideMaterialRef))
    {
        SeekToRef(overrideMaterialRef);
        IMaterial overrideMaterial;
        ReturnFromRef();
    }
} MaterialSwapComponent__MaterialSwapData <optimize=false>;

typedef struct
{
    Ref materialDataSwapEntriesRef;
    unsigned int numMaterialDataSwapEntries;
    if (CanSeekTo(materialDataSwapEntriesRef))
    {
        SeekToRef(materialDataSwapEntriesRef);
        MaterialSwapComponent__MaterialSwapData materialDataSwapEntries[numMaterialDataSwapEntries];
        ReturnFromRef();
    }
    FSkip(4);
    Ref debugNameRef;
    if (CanSeekTo(debugNameRef))
    {
        SeekToRef(debugNameRef);
        string debugName;
        ReturnFromRef();
    }
} MaterialSwapComponent__MaterialSwapDataTable <optimize=false, read=Str("%s", debugName)>;

typedef struct
{
    Ref materialSwapListRef;
    unsigned int numMaterialSwapList;
    if (CanSeekTo(materialSwapListRef))
    {
        SeekToRef(materialSwapListRef);
        MaterialSwapComponent__MaterialSwapDataTable materialSwapList[numMaterialSwapList];
        ReturnFromRef();
    }
} MaterialSwapComponent <optimize=false>;

RefDefinitions refDefinitions;
MaterialSwapComponent root <open=true>;