#define TR_VERSION 10
#include "../../trcommon.bt"

typedef struct
{
} IHighlightableResource <optimize=false>;

typedef struct
{
    IHighlightableResource _Parent;
} IMaterial <optimize=false>;

typedef struct
{
    Ref visionModeDesatTintMaterialRef;
    if (CanSeekTo(visionModeDesatTintMaterialRef))
    {
        SeekToRef(visionModeDesatTintMaterialRef);
        IMaterial visionModeDesatTintMaterial;
        ReturnFromRef();
    }
} CapabilitiesComponent__HighlightMaterials <optimize=false>;

typedef struct
{
    int samplepoints[31];
} MyColorBar <optimize=false>;

typedef struct
{
    unsigned int overrideID;
    FSkip(4);
    Ref debugOverrideNameRef;
    if (CanSeekTo(debugOverrideNameRef))
    {
        SeekToRef(debugOverrideNameRef);
        string debugOverrideName;
        ReturnFromRef();
    }
    float saturation;
    float intensitySaturation[256];
    byte tintEnabled;
    byte saturationEnabled;
    byte overrideEnabled;
    FSkip(1);
    Ref intensityColorTintRef;
    if (CanSeekTo(intensityColorTintRef))
    {
        SeekToRef(intensityColorTintRef);
        MyColorBar intensityColorTint;
        ReturnFromRef();
    }
} CapabilitiesComponent__VisionModeGraphicsSettings <optimize=false>;

typedef struct
{
    float fadeInTime;
    float fadeOutTime;
    CapabilitiesComponent__VisionModeGraphicsSettings visionModeGraphicsSettings;
} CapabilitiesComponent__VisionModeData <optimize=false>;

typedef struct
{
    CapabilitiesComponent__HighlightMaterials highlightMaterials;
    CapabilitiesComponent__VisionModeData visionModeData;
} CapabilitiesComponent <optimize=false>;

RefDefinitions refDefinitions;
CapabilitiesComponent root <open=true>;