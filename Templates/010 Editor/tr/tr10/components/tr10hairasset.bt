#define TR_VERSION 10
#include "../../trcommon.bt"

typedef struct
{
    float x;
    float y;
    float z;
} pure__hlsl__float3 <optimize=false>;

typedef struct
{
    pure__hlsl__float3 min;
    pure__hlsl__float3 max;
} pure__hlsl__aabb <optimize=false>;

typedef struct
{
    unsigned int startOffset;
    unsigned int endOffset;
} pure__hair__TypedBufferSlice_pure__hair__GroupName_ <optimize=false>;

typedef struct
{
    pure__hair__TypedBufferSlice_pure__hair__GroupName_ groupNames;
} pure__hair__HairAssetPerGroupOffsets <optimize=false>;

typedef struct
{
    unsigned int startOffset;
    unsigned int endOffset;
} pure__hair__TypedBufferSlice_pure__hlsl__matrix4x4_ <optimize=false>;

typedef struct
{
    unsigned int startOffset;
    unsigned int endOffset;
} pure__hair__TypedBufferSlice_unsigned <optimize=false>;

typedef struct
{
    pure__hair__TypedBufferSlice_pure__hlsl__matrix4x4_ rootBindFrames;
    pure__hair__TypedBufferSlice_unsigned masterStrandDescriptors;
} pure__hair__HairAssetPerMasterStrandOffsets <optimize=false>;

typedef struct
{
    unsigned int startOffset;
    unsigned int endOffset;
} pure__hair__TypedBufferSlice_pure__hlsl__float4_ <optimize=false>;

typedef struct
{
    unsigned int startOffset;
    unsigned int endOffset;
} pure__hair__TypedBufferSlice_pure__hlsl__float3_ <optimize=false>;

typedef struct
{
    unsigned int startOffset;
    unsigned int endOffset;
} pure__hair__TypedBufferSlice_float_ <optimize=false>;

typedef struct
{
    unsigned int startOffset;
    unsigned int endOffset;
} pure__hair__TypedBufferSlice_pure__hlsl__float2_ <optimize=false>;

typedef struct
{
    unsigned int startOffset;
    unsigned int endOffset;
} pure__hair__TypedBufferSlice_pure__hair__HairMasterVtxSkinning_ <optimize=false>;

typedef struct
{
    pure__hair__TypedBufferSlice_pure__hlsl__float4_ bindPositionsMeshSpace;
    pure__hair__TypedBufferSlice_pure__hlsl__float3_ bindPositionsLocalSpace;
    pure__hair__TypedBufferSlice_float_ restLengths;
    pure__hair__TypedBufferSlice_pure__hlsl__float2_ collisionData;
    pure__hair__TypedBufferSlice_pure__hair__HairMasterVtxSkinning_ skinningData;
    pure__hair__TypedBufferSlice_pure__hlsl__matrix4x4_ bindInvFrames;
    pure__hair__TypedBufferSlice_unsigned masterVtxDescriptors;
} pure__hair__HairAssetPerMasterVertexOffsets <optimize=false>;

typedef struct
{
    unsigned int startOffset;
    unsigned int endOffset;
} pure__hair__TypedBufferSlice_pure__hair__HairSlaveStrandSkinning_ <optimize=false>;

typedef struct
{
    pure__hair__TypedBufferSlice_unsigned slaveStrandDescriptors;
    pure__hair__TypedBufferSlice_unsigned numSlaveVerticesPerNumSlaveStrands;
    pure__hair__TypedBufferSlice_pure__hair__HairSlaveStrandSkinning_ skinningData;
    pure__hair__TypedBufferSlice_unsigned packedNoiseAlpha;
} pure__hair__HairAssetPerSlaveStrandOffsets <optimize=false>;

typedef struct
{
    pure__hair__TypedBufferSlice_unsigned localBindPositions;
    pure__hair__TypedBufferSlice_unsigned packedDirtUV;
    pure__hair__TypedBufferSlice_unsigned packedVtxLODStrandIndices;
    pure__hair__TypedBufferSlice_unsigned packedIndexWeight;
} pure__hair__HairAssetPerSlaveVertexOffsets <optimize=false>;

typedef struct
{
    pure__hair__TypedBufferSlice_unsigned slaveStripIndices;
} pure__hair__HairAssetRenderingData <optimize=false>;

typedef struct
{
    unsigned int startOffset;
    unsigned int endOffset;
} pure__hair__TypedBufferSlice_pure__hair__HairAssetCollisionCapsule_ <optimize=false>;

typedef struct
{
    pure__hair__TypedBufferSlice_pure__hair__HairAssetCollisionCapsule_ capsules;
} pure__hair__HairAssetCollisionData <optimize=false>;

typedef struct
{
    unsigned int tag;
    unsigned int version;
    unsigned int size;
    unsigned int numGroups;
    unsigned int numSkinningTransforms;
    unsigned int numMasterStrands;
    unsigned int numMasterStrandVertices;
    unsigned int numSlaveStrands;
    unsigned int numSlaveStrandVertices;
    pure__hlsl__aabb bindPoseAABB;
    pure__hlsl__float3 bindPoseSlaveOffsetsReferencePosition;
    float slaveOffsetsScale;
    pure__hair__HairAssetPerGroupOffsets perGroupOffsets;
    pure__hair__HairAssetPerMasterStrandOffsets perMasterStrandOffsets;
    pure__hair__HairAssetPerMasterVertexOffsets perMasterVertexOffsets;
    pure__hair__HairAssetPerSlaveStrandOffsets perSlaveStrandOffsets;
    pure__hair__HairAssetPerSlaveVertexOffsets perSlaveVertexOffsets;
    pure__hair__HairAssetRenderingData renderingData;
    pure__hair__HairAssetCollisionData collisionData;
} pure__hair__HairAsset <optimize=false>;

RefDefinitions refDefinitions;
FSkip(40);
pure__hair__HairAsset root <open=true>;