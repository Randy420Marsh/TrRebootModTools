//------------------------------------------------
//--- 010 Editor v14.0 Binary Template
//
//      File: tr11globalachievements.bt
//   Authors: arc_
//   Version: 0.1
//   Purpose: Parse the .tr11dtp file in globalachievements.drm
//  Category: SOTTR
//------------------------------------------------

#include "tr11common.bt"

typedef struct
{
    FSkip(8);
    uquad nameLocaleHash <format=hex>;
    uquad descriptionLocaleHash <format=hex>;
    
    FSkip(0xF8 - 0x18);
    InternalRef texture1Ref;
    if (IsValidRef(texture1Ref))
    {
        SeekToRef(texture1Ref);
        string texture1;
        ReturnFromRef();
    }
    
    FSkip(0x120 - 0x100);
    InternalRef texture2Ref;
    if (IsValidRef(texture2Ref))
    {
        SeekToRef(texture2Ref);
        string texture2;
        ReturnFromRef();
    }
    
    FSkip(0x1A8 - 0x128);
    InternalRef nameRef;
    if (IsValidRef(nameRef))
    {
        SeekToRef(nameRef);
        string name;
        ReturnFromRef();
    }
    
    FSkip(0x238 - 0x1B0);
    InternalRef descriptionRef;
    if (IsValidRef(descriptionRef))
    {
        SeekToRef(descriptionRef);
        string description;
        ReturnFromRef();
    }
    
    FSkip(0x280 - 0x240);
} Trait <read=((exists(name) ? name : "") + (exists(description) ? " / " + description : "")), optimize=false>;

typedef struct
{
    FSkip(0x10);
    int numTraits;
    FSkip(4);
    InternalRef traitsRef;
    if (IsValidRef(traitsRef))
    {
        SeekToRef(traitsRef);
        Trait traits[numTraits];
        ReturnFromRef();
    }
} Root;

RefDefinitions refDefinitions;
InternalRef rootRef;
if (IsValidRef(rootRef))
{
    SeekToRef(rootRef);
    Root root <open=true>;
    ReturnFromRef();
}
