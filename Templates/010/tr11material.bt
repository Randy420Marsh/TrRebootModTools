//------------------------------------------------
//--- 010 Editor v14.0 Binary Template
//
//      File: tr11material.bt
//   Authors: arc_
//   Version: 0.1
//   Purpose: Parse SOTTR material files
//  Category: SOTTR
// File Mask: *.tr11material
//------------------------------------------------

#include "tr11common.bt"

typedef struct
{
    ExternalRef textureRef;
    int _;
    short padding : 11;
    short slot : 5;
    FSkip(2);
} ShaderTexture <optimize=false, read=Str("%s -> slot %d", ReadExternalRef(textureRef), slot)>;

typedef struct
{
    float x;
    float y;
    float z;
    float w;
} ShaderConstant <read=Str("(%f, %f, %f, %f)", x, y, z, w)>;

typedef struct
{
    ExternalRef pixelOrHullShader;
    ExternalRef vertexOrDomainShader;
    int flags <format=hex>;
    
    byte numPsTextures_;
    byte numPsTextureRanges;
    byte numPsTextures;
    byte psTextureRangeStartIdx;
    InternalRef psTexturesRef;
    if (IsValidRef(psTexturesRef))
    {
        SeekToRef(psTexturesRef);
        ShaderTexture psTextures[numPsTextures];
        ReturnFromRef();
    }
    int numPsConstants;
    FSkip(4);
    InternalRef psConstantsRef;
    if (IsValidRef(psConstantsRef))
    {
        SeekToRef(psConstantsRef);
        ShaderConstant psConstants[numPsConstants];
        ReturnFromRef();
    }
    
    byte numVsTextures_;
    byte numVsTextureRanges;
    byte numVsTextures;
    byte vsTextureRangeStartIdx;
    FSkip(4);
    InternalRef vsTexturesRef;
    if (IsValidRef(vsTexturesRef))
    {
        SeekToRef(vsTexturesRef);
        ShaderTexture vsTextures[numVsTextures];
        ReturnFromRef();
    }
    int  numVsConstants;
    FSkip(4);
    InternalRef vsConstantsRef;
    if (IsValidRef(vsConstantsRef))
    {
        SeekToRef(vsConstantsRef);
        ShaderConstant vsConstants[numVsConstants];
        ReturnFromRef();
    }
    FSkip(8);
    
    InternalRef tesselationShaderRef;
    InternalRef extraRefs[3];
} ShaderSet <style=sHeading2>;

typedef struct
{
    InternalRef reference;
    if (IsValidRef(reference))
    {
        SeekToRef(reference);
        ShaderSet shaderSet;
        ReturnFromRef();
    }
} ShaderSetRef <optimize=false>;

typedef struct
{
    ushort version;
    FSkip(0x54 - 2);
    char magic[4];
    ShaderSetRef shaderSets[9] <open=true>;
} Material;

RefDefinitions refDefinitions;
Material material <open=true>;
